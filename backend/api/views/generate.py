from django.http import JsonResponse
from django.views.decorators.csrf import csrf_exempt
import json
from decimal import Decimal
from openai import OpenAI

# C·∫•u h√¨nh DeepSeek client
client = OpenAI(
    api_key="sk-448fabfc586b442daee4d626f7bdf81b",
    base_url="https://api.deepseek.com"
)

@csrf_exempt
def generate_view(request):
    if request.method != "POST":
        return JsonResponse({"error": "Ph∆∞∆°ng th·ª©c kh√¥ng ƒë∆∞·ª£c h·ªó tr·ª£. H√£y d√πng POST."}, status=405)

    try:
        data = json.loads(request.body)
        input_text = data.get("input_text", "").strip()

        if not input_text:
            return JsonResponse({"error": "Thi·∫øu n·ªôi dung c√¢u h·ªèi (input_text)."}, status=400)

        # G·ª≠i y√™u c·∫ßu ƒë·∫øn DeepSeek Chat
        response = client.chat.completions.create(
            model="deepseek-chat",
            messages=[
                {
                    "role": "system",
                    "content": "B·∫°n l√† m·ªôt tr·ª£ l√Ω gi·ªèi, chuy√™n gi·∫£i b√†i t·∫≠p to√°n b·∫±ng ti·∫øng Vi·ªát. Lu√¥n gi·∫£i th√≠ch chi ti·∫øt t·ª´ng b∆∞·ªõc v√† s·ª≠ d·ª•ng ng√¥n ng·ªØ d·ªÖ hi·ªÉu."
                },
                {
                    "role": "user",
                    "content": f"H√£y gi·∫£i b√†i to√°n sau v√† tr√¨nh b√†y l·ªùi gi·∫£i chi ti·∫øt b·∫±ng ti·∫øng Vi·ªát: {input_text}"
                }
            ],
            temperature=0.7,
            max_tokens=1024
        )

        # X·ª≠ l√Ω ph·∫£n h·ªìi
        choices = response.choices
        if choices and choices[0].message and choices[0].message.content:
            result = choices[0].message.content.strip()
        else:
            result = "‚ö†Ô∏è Kh√¥ng nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi t·ª´ m√¥ h√¨nh."

        return JsonResponse({"result": result}, status=200)

    except Exception as e:
        print("üí• L·ªói x·ª≠ l√Ω:", str(e))
        return JsonResponse({"error": f"L·ªói x·ª≠ l√Ω: {str(e)}"}, status=500)
