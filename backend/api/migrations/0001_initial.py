# Generated by Django 5.1.7 on 2025-07-06 02:54

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approve', models.SmallIntegerField(default=0, verbose_name='Duyệt câu trả lời')),
                ('image', models.FileField(blank=True, null=True, upload_to='image_for_answers/', verbose_name='Tệp đính kèm')),
            ],
            options={
                'db_table': 'answers',
            },
        ),
        migrations.CreateModel(
            name='AutoApproveSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('question', 'Câu hỏi'), ('answer', 'Câu trả lời'), ('comment', 'Bình luận'), ('courses', 'Khóa học')], max_length=20, unique=True)),
                ('enabled', models.BooleanField(default=False)),
                ('from_date', models.DateField(blank=True, null=True)),
                ('to_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lesson_id', models.PositiveIntegerField(default=1, verbose_name='ID bài học')),
                ('content', models.TextField(verbose_name='Nội dung câu hỏi')),
                ('answer_a', models.CharField(max_length=255, verbose_name='Đáp án A')),
                ('answer_b', models.CharField(max_length=255, verbose_name='Đáp án B')),
                ('answer_c', models.CharField(max_length=255, verbose_name='Đáp án C')),
                ('answer_d', models.CharField(max_length=255, verbose_name='Đáp án D')),
                ('correct_answer', models.CharField(max_length=1, verbose_name='Đáp án đúng')),
                ('score', models.DecimalField(decimal_places=2, default=1.0, max_digits=5, verbose_name='Điểm')),
            ],
            options={
                'db_table': 'exercise_question',
            },
        ),
        migrations.CreateModel(
            name='Homework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'homeworks',
            },
        ),
        migrations.CreateModel(
            name='QuestionTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'db_table': 'question_tags',
            },
        ),
        migrations.CreateModel(
            name='UserInformation',
            fields=[
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('full_name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Nam', 'Nam'), ('Nữ', 'Nữ')], max_length=10)),
                ('user_type', models.CharField(max_length=50)),
                ('address', models.TextField(blank=True, max_length=255, null=True)),
                ('avatar', models.CharField(blank=True, max_length=255, null=True)),
                ('reputation', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'user_info',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_comment', models.CharField(choices=[('question', 'Question'), ('answer', 'Answer')], max_length=10)),
                ('content_id', models.IntegerField()),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='comments/', verbose_name='Tệp đính kèm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approve', models.SmallIntegerField(default=0, verbose_name='Duyệt bình luận')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comments',
            },
        ),
        migrations.CreateModel(
            name='CommentForAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='comments/', verbose_name='Tệp đính kèm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approve', models.SmallIntegerField(default=0, verbose_name='Duyệt bình luận câu trả lời')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.answer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'comments_for_answers',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tên khóa học')),
                ('student_count', models.PositiveIntegerField(default=0, verbose_name='Số người học')),
                ('fee', models.DecimalField(decimal_places=2, default=0.0, max_digits=10, verbose_name='Lệ phí')),
                ('video_count', models.PositiveIntegerField(default=0, verbose_name='Số video')),
                ('total_duration', models.DurationField(default=datetime.timedelta(0), verbose_name='Tổng thời lượng')),
                ('level', models.CharField(choices=[('basic', 'Dễ'), ('medium', 'Trung bình'), ('hard', 'Khó')], default='basic', max_length=30, verbose_name='Trình độ')),
                ('intro_video', models.CharField(blank=True, max_length=500, null=True, verbose_name='Giới thiệu')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='course_thumbnails/', verbose_name='Ảnh khóa học')),
                ('tags', models.CharField(blank=True, max_length=255, verbose_name='Thẻ (tags)')),
                ('qr_code', models.FileField(blank=True, null=True, upload_to='qr_codes/', verbose_name='Mã QR')),
                ('intro', models.TextField(blank=True, verbose_name='Giới thiệu khóa học')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian tạo')),
                ('is_approve', models.SmallIntegerField(default=0, verbose_name='Duyệt khóa học')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Người dùng')),
            ],
            options={
                'db_table': 'course',
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tên chương')),
                ('lesson_count', models.PositiveIntegerField(default=0, verbose_name='Số bài học')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian tạo')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='api.course')),
            ],
            options={
                'db_table': 'chapter',
            },
        ),
        migrations.CreateModel(
            name='HomeworkQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField()),
                ('question_type', models.CharField(choices=[('single', 'Single Choice'), ('multiple', 'Multiple Choice')], default='single', max_length=20)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='api.homework')),
            ],
            options={
                'db_table': 'homework_questions',
            },
        ),
        migrations.CreateModel(
            name='HomeworkChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='api.homeworkquestion')),
            ],
            options={
                'db_table': 'homework_choices',
            },
        ),
        migrations.CreateModel(
            name='HomeworkSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField(default=0)),
                ('homework', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.homework')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'homework_submissions',
                'unique_together': {('student', 'homework')},
            },
        ),
        migrations.CreateModel(
            name='HomeworkSubmissionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.homeworkquestion')),
                ('selected_choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.homeworkchoice')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='api.homeworksubmission')),
            ],
            options={
                'db_table': 'homework_submission_answers',
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tên bài học')),
                ('video', models.CharField(blank=True, max_length=500, null=True, verbose_name='Link video bài học')),
                ('duration', models.DurationField(verbose_name='Thời lượng')),
                ('document_link', models.FileField(blank=True, null=True, upload_to='lesson_documents/', verbose_name='Tài liệu bài học')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Thời gian tạo')),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='api.chapter')),
            ],
            options={
                'db_table': 'lesson',
            },
        ),
        migrations.AddField(
            model_name='homework',
            name='lesson',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='homeworks', to='api.lesson'),
        ),
        migrations.CreateModel(
            name='LessonDocumentView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lesson_document_view',
            },
        ),
        migrations.CreateModel(
            name='LessonVideoView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'lesson_video_view',
            },
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_histories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-login_time'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_answer_id', models.IntegerField(blank=True, null=True)),
                ('bounty_amount', models.IntegerField(blank=True, default=0, null=True)),
                ('is_approve', models.SmallIntegerField(default=0, verbose_name='Duyệt câu hỏi')),
                ('image', models.FileField(blank=True, null=True, upload_to='image_for_questions/', verbose_name='Tệp đính kèm')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='CommentForQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='comments/', verbose_name='Tệp đính kèm')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approve', models.SmallIntegerField(default=0, verbose_name='Duyệt bình luận câu hỏi')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
            ],
            options={
                'db_table': 'comments_for_questions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question'),
        ),
        migrations.CreateModel(
            name='Reputation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_key', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('point_change', models.IntegerField()),
                ('user_id_last_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reputation_updates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReputationPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_key', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('min_reputation', models.IntegerField()),
                ('user_id_last_update', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reputation_permission_updates', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('otp_code', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinformation')),
            ],
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.userinformation'),
        ),
        migrations.CreateModel(
            name='CourseRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'course_registration',
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='QuestionTagMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.questiontag')),
            ],
            options={
                'db_table': 'question_tag_map',
                'unique_together': {('question', 'tag')},
            },
        ),
        migrations.CreateModel(
            name='View',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_date', models.DateField(default=datetime.date.today)),
                ('view_count', models.IntegerField(default=1)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'views',
                'unique_together': {('user', 'question', 'view_date')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(blank=True, choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=10, null=True)),
                ('vote_for', models.CharField(choices=[('question', 'Question'), ('answer', 'Answer')], max_length=10)),
                ('content_id', models.BigIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'votes',
                'unique_together': {('user', 'vote_for', 'content_id')},
            },
        ),
        migrations.CreateModel(
            name='VoteForAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.answer')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'votes_for_answers',
                'unique_together': {('user', 'answer')},
            },
        ),
        migrations.CreateModel(
            name='VoteForQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'votes_for_questions',
                'unique_together': {('user', 'question')},
            },
        ),
    ]
